apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        preDexLibraries = !rootProject.ext.ci
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile rootProject.ext.firebaseAuth
    compile rootProject.ext.retroOptional
    compile rootProject.ext.rxJava
    compile rootProject.ext.supportAnnotations

    testCompile rootProject.ext.assertj
    testCompile rootProject.ext.junit
    testCompile rootProject.ext.mockito
}

apply plugin: 'jacoco'

jacoco {
    reportsDir = file("${buildDir}/reports")
}

task coverageReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    def coverageSourceDirs = ['src/main/java']

    classDirectories = fileTree(
            dir: "${buildDir}/intermediates/classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       'com/android/**/*.class']
    )

    sourceDirectories = files(coverageSourceDirs)
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

apply plugin: 'com.github.kt3k.coveralls'

coveralls {
    jacocoReportPath = "${buildDir}/reports/coverageReport/coverageReport.xml"
}

tasks.coveralls {
    dependsOn 'coverageReport'
    onlyIf { System.env.'CI' }
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
